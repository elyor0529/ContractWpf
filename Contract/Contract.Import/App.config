<?xml version="1.0" encoding="utf-8"?>

<configuration>
  <configSections>
    <section name="unity"
             type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration, Version=4.0.0.0" />

    <!-- For more information on Entity Framework configuration, visit http://go.microsoft.com/fwlink/?LinkID=237468 -->
    <section name="entityFramework"
             type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=6.0.0.0"
             requirePermission="false" />
  </configSections>
  <connectionStrings>

    <add name="MainContext"
         connectionString="Data Source=localhost;User ID=sa;Password=1;Initial Catalog=ContractDB;MultipleActiveResultSets=True;"
         providerName="System.Data.SqlClient" />
    <!--<add name="MainContext"
         connectionString="Data Source=(LocalDB)\v11.0;AttachDbFilename=./ContractDB.mdf;Integrated Security=True"
         providerName="System.Data.SqlClient" />-->

  </connectionStrings>
  <unity>
    <typeAliases>

      <!-- Core elements and utils -->
      <typeAlias alias="singleton"
                 type="Microsoft.Practices.Unity.ContainerControlledLifetimeManager,Microsoft.Practices.Unity" />
      <typeAlias alias="external"
                 type="Microsoft.Practices.Unity.ExternallyControlledLifetimeManager,Microsoft.Practices.Unity" />
      <typeAlias alias="perThread" type="Microsoft.Practices.Unity.PerThreadLifetimeManager,Microsoft.Practices.Unity" />
      <typeAlias alias="perHttpRequestLifetime" type="Contract.Core.PerHttpRequestLifetime, Contract.Core" />
      <typeAlias alias="RepositoryContextBase" type="Contract.Data.RepositoryContextBase, Contract.Data" />
      <typeAlias alias="DbContext" type="System.Data.Entity.DbContext, EntityFramework" />
      <typeAlias alias="MainContext" type="Contract.Data.MainContext, Contract.Data" />
      <!-- Core elements and utils end -->

      <!-- Data -->
      <typeAlias alias="SqlServerRepositoryContext" type="Contract.Data.SqlServerRepositoryContext, Contract.Data" />
      <!-- Data end -->

      <!-- Services -->

      <!--interfaces-->
      <typeAlias alias="IActInvoiceService" type="Contract.Services.Interface.IActInvoiceService, Contract.Services" />
      <typeAlias alias="IOrganizationService"
                 type="Contract.Services.Interface.IOrganizationService, Contract.Services" />
      <typeAlias alias="IContractDepartmentService"
                 type="Contract.Services.Interface.IContractDepartmentService, Contract.Services" />
      <typeAlias alias="IContractService" type="Contract.Services.Interface.IContractService, Contract.Services" />
      <typeAlias alias="IContractWorkPaymentService"
                 type="Contract.Services.Interface.IContractWorkPaymentService, Contract.Services" />
      <typeAlias alias="IDepartmentService" type="Contract.Services.Interface.IDepartmentService, Contract.Services" />
      <typeAlias alias="INakladnoyService" type="Contract.Services.Interface.INakladnoyService, Contract.Services" />
      <typeAlias alias="IPaymentService" type="Contract.Services.Interface.IPaymentService, Contract.Services" />
      <typeAlias alias="IWorkTypeService" type="Contract.Services.Interface.IWorkTypeService, Contract.Services" />
      <typeAlias alias="ICategoryService" type="Contract.Services.Interface.ICategoryService, Contract.Services" />
      <typeAlias alias="IBranchService" type="Contract.Services.Interface.IBranchService, Contract.Services" />
      <typeAlias alias="IPeriodService" type="Contract.Services.Interface.IPeriodService, Contract.Services" />

      <!--classes-->
      <typeAlias alias="ActInvoiceService" type="Contract.Services.ActInvoiceService, Contract.Services" />
      <typeAlias alias="OrganizationService" type="Contract.Services.OrganizationService, Contract.Services" />
      <typeAlias alias="ContractDepartmentService"
                 type="Contract.Services.ContractDepartmentService, Contract.Services" />
      <typeAlias alias="ContractService" type="Contract.Services.ContractService, Contract.Services" />
      <typeAlias alias="ContractWorkPaymentService"
                 type="Contract.Services.ContractWorkPaymentService, Contract.Services" />
      <typeAlias alias="DepartmentService" type="Contract.Services.DepartmentService, Contract.Services" />
      <typeAlias alias="NakladnoyService" type="Contract.Services.NakladnoyService, Contract.Services" />
      <typeAlias alias="PaymentService" type="Contract.Services.PaymentService, Contract.Services" />
      <typeAlias alias="WorkTypeService" type="Contract.Services.WorkTypeService, Contract.Services" />
      <typeAlias alias="CategoryService" type="Contract.Services.CategoryService, Contract.Services" />
      <typeAlias alias="BranchService" type="Contract.Services.BranchService, Contract.Services" />
      <typeAlias alias="PeriodService" type="Contract.Services.PeriodService, Contract.Services" />

      <!-- Services end -->
    </typeAliases>
    <containers>
      <container name="container">
        <types>
          <type type="DbContext" mapTo="MainContext">
            <lifetime type="perHttpRequestLifetime" />
          </type>
          <!-- New repository -->
          <type type="RepositoryContextBase" mapTo="SqlServerRepositoryContext">
            <constructor>
              <param name="context">
                <dependency />
              </param>
            </constructor>
          </type>
          <!-- New repository End-->
          <!-- Services -->
          <type type="IActInvoiceService" mapTo="ActInvoiceService">
            <constructor />
          </type>
          <type type="IOrganizationService" mapTo="OrganizationService">
            <constructor />
          </type>
          <type type="IContractDepartmentService" mapTo="ContractDepartmentService">
            <constructor />
          </type>
          <type type="IContractService" mapTo="ContractService">
            <constructor />
          </type>
          <type type="IContractWorkPaymentService" mapTo="ContractWorkPaymentService">
            <constructor />
          </type>
          <type type="IDepartmentService" mapTo="DepartmentService">
            <constructor />
          </type>
          <type type="INakladnoyService" mapTo="NakladnoyService">
            <constructor />
          </type>
          <type type="IPaymentService" mapTo="PaymentService">
            <constructor />
          </type>
          <type type="IWorkTypeService" mapTo="WorkTypeService">
            <constructor />
          </type>
          <type type="ICategoryService" mapTo="CategoryService">
            <constructor />
          </type>
          <type type="IBranchService" mapTo="BranchService">
            <constructor />
          </type>
          <type type="IPeriodService" mapTo="PeriodService">
            <constructor />
          </type>
        </types>
        <!-- Services end-->
      </container>
    </containers>
  </unity>
  <entityFramework>
    <defaultConnectionFactory type="System.Data.Entity.Infrastructure.LocalDbConnectionFactory, EntityFramework">
      <parameters>
        <parameter value="mssqllocaldb" />
      </parameters>
    </defaultConnectionFactory>
    <providers>
      <provider invariantName="System.Data.SqlClient"
                type="System.Data.Entity.SqlServer.SqlProviderServices, EntityFramework.SqlServer" />
    </providers>
  </entityFramework>
</configuration>